@page "/"
@using ChibiCSharpCompiler
@using System.Net
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div>
    <h4>ChibiCSharp</h4>
    <div class="code">
        <h5>コード</h5>
        <div>
            <button @onclick="OnClickSample">サンプルコード</button>(@(Count == -1 ? "-" : Count + 1) / @SampleCode.Length)
        </div>
        <textarea @bind=@Code @oninput="OnInputChange" placeholder="ココにコードを書くかサンプルコードを押してください" style="width: 300px; height: 150px;"></textarea>
    </div>
    <p>↓</p>
    <div class="compile">
        <h5>アセンブリ</h5>
        <pre class="border">
            @(Assembly)
        </pre>
    </div>
    <div class="run">
        <button @onclick="OnClickRun">ilasm.exe → 実行</button>
        <div class="border">
            @(ExeResult)
        </div>
    </div>
    <div>
        <br/>
        <blockquote>inspired by <a href="https://www.sigbus.info/compilerbook">低レイヤを知りたい人のためのCコンパイラ作成入門</a></blockquote>
        <ul>
            ステップ12: 制御構文を足す(If完成、While完成、For対応中)
            <li><s>ステップ11：return文</s></li>
            <li><s>ステップ10：複数文字のローカル変数</s></li>
            <li><s>ステップ9：1文字のローカル変数</s></li>
            <li><s>ステップ8: ファイル分割とMakefileの変更</s></li>
            <li><s>ステップ7: 比較演算子</s></li>
            <li><s>ステップ6：単項プラスと単項マイナス</s></li>
            <li><s>ステップ5：四則演算のできる言語の作成</s></li>
            <li><s>ステップ4：エラーメッセージを改良</s></li>
            <li><s>ステップ3：トークナイザを導入</s></li>
            <li><s>ステップ2：加減算のできるコンパイラの作成</s></li>
            <li><s>ステップ1：整数1個をコンパイルする言語の作成</s></li>
        </ul>
    </div>
</div>


@code {
    private string Code { get; set; } = "";
    private string Assembly = "";
    private string ExeResult = "";
    private static readonly string[] SampleCode =
    {
        $"return (3+5)/2;",
        $"return 0<=1;",
        $"a=3;{Environment.NewLine}z=5;{Environment.NewLine}return a+z;",
        $"if (1) return 2;{Environment.NewLine}return 3;",
        $"i=0;{Environment.NewLine}while(i<10) i=i+1;{Environment.NewLine}return i;",
        $"i=0;{Environment.NewLine}j=0;{Environment.NewLine}for (i=0; i<=10; i=i+1) j=i+j;{Environment.NewLine}return j;",
    };
    private static int Count = -1;

    private void OnInputChange(ChangeEventArgs e)
    {
        Code = e.Value?.ToString() ?? "";
        Assembly = WebUtility.HtmlEncode(Compiler.Compile(Code));
    }

    private void OnClickSample()
    {
        Count = (Count + 1) % SampleCode.Length;
        Code = SampleCode[Count];
        Assembly = WebUtility.HtmlEncode(Compiler.Compile(Code));
    }

    private void OnClickRun()
    {
        ExeResult = Executer.Run(Assembly);
    }
}